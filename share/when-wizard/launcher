# script: share/when-wizard/launcher
# -*- coding: utf-8 -*-
#
# When Wizard
#
# Copyright (c) 2015-2016 Francesco Garosi
# Released under the BSD License (see LICENSE file)
#
# Task launcher: stub to run a task implemented as a task plugin
# Usage: when-wizard launcher plugin_name instance_id


import os
import sys
from plugin import load_plugin_module, retrieve_plugin


# the main entry point can just return an exit value
def main():
    me = os.path.basename(__file__)
    if len(sys.argv) != 3:
        return 1
    mod = load_plugin_module(sys.argv[1], True)
    if mod:
        p = mod.Plugin()
        try:
            # use of specific retrieve_plugin is possible because concrete
            # plugin classes should be created in a way that no argument
            # is needed for the constructor
            # TODO: remove comment and add to developer docs
            retrieve_plugin(sys.argv[2], p)
        except:
            return 2
        if hasattr(p, 'run') and p.run():
            return 0
        else:
            return 2
    else:
        return 2


# end.
