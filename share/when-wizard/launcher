# script: share/when-wizard/launcher
# -*- coding: utf-8 -*-
#
# When Wizard
#
# Copyright (c) 2015-2018 Francesco Garosi
# Released under the BSD License (see LICENSE file)
#
# Task launcher: stub to run a task implemented as a task plugin
# Usage: when-wizard launcher plugin_name instance_id


import os
import sys
from plugin import load_plugin_module, retrieve_plugin
from utility import oerr
from resources import RESOURCES


# the main entry point can just return an exit value
def main():
    me = os.path.basename(__file__)
    if len(sys.argv) != 3:
        oerr(me, RESOURCES.CLI_ERR_INVALID_ARGUMENTS)
        return 1
    mod = load_plugin_module(sys.argv[1], True)
    if mod is None:
        mod = load_plugin_module(sys.argv[1], False)
    if mod:
        p = mod.Plugin()
        try:
            retrieve_plugin(sys.argv[2], p)
        except:
            oerr(me, RESOURCES.CLI_ERR_FAIL_LOAD_PLUGIN)
            return 2
        if hasattr(p, 'run') and p.run():
            return 0
        else:
            oerr(me, RESOURCES.CLI_ERR_FAIL_RUN_PLUGIN)
            return 2
    else:
        oerr(me, RESOURCES.CLI_ERR_FAIL_LOAD_PLUGIN_MODULE)
        return 2


# end.
